// Generated from ABCMusic.g4 by ANTLR 4.0

package grammar;

import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class ABCMusicLexer extends Lexer {
	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__51=1, T__50=2, T__49=3, T__48=4, T__47=5, T__46=6, T__45=7, T__44=8, 
		T__43=9, T__42=10, T__41=11, T__40=12, T__39=13, T__38=14, T__37=15, T__36=16, 
		T__35=17, T__34=18, T__33=19, T__32=20, T__31=21, T__30=22, T__29=23, 
		T__28=24, T__27=25, T__26=26, T__25=27, T__24=28, T__23=29, T__22=30, 
		T__21=31, T__20=32, T__19=33, T__18=34, T__17=35, T__16=36, T__15=37, 
		T__14=38, T__13=39, T__12=40, T__11=41, T__10=42, T__9=43, T__8=44, T__7=45, 
		T__6=46, T__5=47, T__4=48, T__3=49, T__2=50, T__1=51, T__0=52, WHITESPACE=53, 
		DIGIT=54, WORD=55, LINEFEED=56;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"<INVALID>",
		"'E'", "'['", "'*'", "'A'", "'X:'", "'d'", "'T:'", "'Q:'", "'w:'", "'-'", 
		"'M:'", "'^^'", "'%'", "'_'", "'D'", "'c'", "'='", "'[|'", "'[1'", "'|'", 
		"'C|'", "'g'", "'b'", "']'", "'C'", "'C:'", "','", "'-'", "'('", "'f'", 
		"'''", "'|]'", "' '", "'G'", "'[2'", "'|:'", "'^'", "'a'", "'L:'", "'__'", 
		"'B'", "':|'", "'V:'", "'e'", "'||'", "'m'", "'z'", "'K:'", "'F'", "'/'", 
		"'~'", "'#'", "WHITESPACE", "DIGIT", "WORD", "LINEFEED"
	};
	public static final String[] ruleNames = {
		"T__51", "T__50", "T__49", "T__48", "T__47", "T__46", "T__45", "T__44", 
		"T__43", "T__42", "T__41", "T__40", "T__39", "T__38", "T__37", "T__36", 
		"T__35", "T__34", "T__33", "T__32", "T__31", "T__30", "T__29", "T__28", 
		"T__27", "T__26", "T__25", "T__24", "T__23", "T__22", "T__21", "T__20", 
		"T__19", "T__18", "T__17", "T__16", "T__15", "T__14", "T__13", "T__12", 
		"T__11", "T__10", "T__9", "T__8", "T__7", "T__6", "T__5", "T__4", "T__3", 
		"T__2", "T__1", "T__0", "WHITESPACE", "DIGIT", "WORD", "LINEFEED"
	};


	    // This method makes the lexer or parser stop running if it encounters
	    // invalid input and throw a RuntimeException.
	    public void reportErrorsAsExceptions() {
	        removeErrorListeners();
	        addErrorListener(new ExceptionThrowingErrorListener());
	    }

	    private static class ExceptionThrowingErrorListener extends BaseErrorListener {
	        @Override
	        public void syntaxError(Recognizer<?, ?> recognizer,
	                Object offendingSymbol, int line, int charPositionInLine,
	                String msg, RecognitionException e) {
	            throw new RuntimeException(msg);
	        }
	    }


	public ABCMusicLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "ABCMusic.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\2\4:\u0103\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t"+
		"\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20"+
		"\t\20\4\21\t\21\4\22\t\22\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27"+
		"\t\27\4\30\t\30\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36"+
		"\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4"+
		"(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62"+
		"\t\62\4\63\t\63\4\64\t\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\3"+
		"\2\3\2\3\3\3\3\3\4\3\4\3\5\3\5\3\6\3\6\3\6\3\7\3\7\3\b\3\b\3\b\3\t\3\t"+
		"\3\t\3\n\3\n\3\n\3\13\3\13\3\13\3\f\3\f\3\f\3\r\3\r\3\r\3\16\3\16\3\17"+
		"\3\17\3\20\3\20\3\21\3\21\3\22\3\22\3\23\3\23\3\23\3\24\3\24\3\24\3\25"+
		"\3\25\3\26\3\26\3\26\3\27\3\27\3\30\3\30\3\31\3\31\3\32\3\32\3\33\3\33"+
		"\3\33\3\34\3\34\3\35\3\35\3\36\3\36\3\37\3\37\3 \3 \3!\3!\3!\3\"\3\"\3"+
		"#\3#\3$\3$\3$\3%\3%\3%\3&\3&\3\'\3\'\3(\3(\3(\3)\3)\3)\3*\3*\3+\3+\3+"+
		"\3,\3,\3,\3-\3-\3.\3.\3.\3/\3/\3\60\3\60\3\61\3\61\3\61\3\62\3\62\3\63"+
		"\3\63\3\64\3\64\3\65\3\65\3\66\6\66\u00f1\n\66\r\66\16\66\u00f2\3\67\6"+
		"\67\u00f6\n\67\r\67\16\67\u00f7\38\68\u00fb\n8\r8\168\u00fc\39\69\u0100"+
		"\n9\r9\169\u0101\2:\3\3\1\5\4\1\7\5\1\t\6\1\13\7\1\r\b\1\17\t\1\21\n\1"+
		"\23\13\1\25\f\1\27\r\1\31\16\1\33\17\1\35\20\1\37\21\1!\22\1#\23\1%\24"+
		"\1\'\25\1)\26\1+\27\1-\30\1/\31\1\61\32\1\63\33\1\65\34\1\67\35\19\36"+
		"\1;\37\1= \1?!\1A\"\1C#\1E$\1G%\1I&\1K\'\1M(\1O)\1Q*\1S+\1U,\1W-\1Y.\1"+
		"[/\1]\60\1_\61\1a\62\1c\63\1e\64\1g\65\1i\66\1k\67\1m8\1o9\1q:\1\3\2\5"+
		"\4\13\13\"\"\3\62;\7##\60\60AAC\\c|\u0106\2\3\3\2\2\2\2\5\3\2\2\2\2\7"+
		"\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2"+
		"\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2"+
		"\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2"+
		"\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2"+
		"\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2"+
		"\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M"+
		"\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2"+
		"\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2\2e\3\2\2\2"+
		"\2g\3\2\2\2\2i\3\2\2\2\2k\3\2\2\2\2m\3\2\2\2\2o\3\2\2\2\2q\3\2\2\2\3s"+
		"\3\2\2\2\5u\3\2\2\2\7w\3\2\2\2\ty\3\2\2\2\13{\3\2\2\2\r~\3\2\2\2\17\u0080"+
		"\3\2\2\2\21\u0083\3\2\2\2\23\u0086\3\2\2\2\25\u0089\3\2\2\2\27\u008c\3"+
		"\2\2\2\31\u008f\3\2\2\2\33\u0092\3\2\2\2\35\u0094\3\2\2\2\37\u0096\3\2"+
		"\2\2!\u0098\3\2\2\2#\u009a\3\2\2\2%\u009c\3\2\2\2\'\u009f\3\2\2\2)\u00a2"+
		"\3\2\2\2+\u00a4\3\2\2\2-\u00a7\3\2\2\2/\u00a9\3\2\2\2\61\u00ab\3\2\2\2"+
		"\63\u00ad\3\2\2\2\65\u00af\3\2\2\2\67\u00b2\3\2\2\29\u00b4\3\2\2\2;\u00b6"+
		"\3\2\2\2=\u00b8\3\2\2\2?\u00ba\3\2\2\2A\u00bc\3\2\2\2C\u00bf\3\2\2\2E"+
		"\u00c1\3\2\2\2G\u00c3\3\2\2\2I\u00c6\3\2\2\2K\u00c9\3\2\2\2M\u00cb\3\2"+
		"\2\2O\u00cd\3\2\2\2Q\u00d0\3\2\2\2S\u00d3\3\2\2\2U\u00d5\3\2\2\2W\u00d8"+
		"\3\2\2\2Y\u00db\3\2\2\2[\u00dd\3\2\2\2]\u00e0\3\2\2\2_\u00e2\3\2\2\2a"+
		"\u00e4\3\2\2\2c\u00e7\3\2\2\2e\u00e9\3\2\2\2g\u00eb\3\2\2\2i\u00ed\3\2"+
		"\2\2k\u00f0\3\2\2\2m\u00f5\3\2\2\2o\u00fa\3\2\2\2q\u00ff\3\2\2\2st\7G"+
		"\2\2t\4\3\2\2\2uv\7]\2\2v\6\3\2\2\2wx\7,\2\2x\b\3\2\2\2yz\7C\2\2z\n\3"+
		"\2\2\2{|\7Z\2\2|}\7<\2\2}\f\3\2\2\2~\177\7f\2\2\177\16\3\2\2\2\u0080\u0081"+
		"\7V\2\2\u0081\u0082\7<\2\2\u0082\20\3\2\2\2\u0083\u0084\7S\2\2\u0084\u0085"+
		"\7<\2\2\u0085\22\3\2\2\2\u0086\u0087\7y\2\2\u0087\u0088\7<\2\2\u0088\24"+
		"\3\2\2\2\u0089\u008a\7^\2\2\u008a\u008b\7/\2\2\u008b\26\3\2\2\2\u008c"+
		"\u008d\7O\2\2\u008d\u008e\7<\2\2\u008e\30\3\2\2\2\u008f\u0090\7`\2\2\u0090"+
		"\u0091\7`\2\2\u0091\32\3\2\2\2\u0092\u0093\7\'\2\2\u0093\34\3\2\2\2\u0094"+
		"\u0095\7a\2\2\u0095\36\3\2\2\2\u0096\u0097\7F\2\2\u0097 \3\2\2\2\u0098"+
		"\u0099\7e\2\2\u0099\"\3\2\2\2\u009a\u009b\7?\2\2\u009b$\3\2\2\2\u009c"+
		"\u009d\7]\2\2\u009d\u009e\7~\2\2\u009e&\3\2\2\2\u009f\u00a0\7]\2\2\u00a0"+
		"\u00a1\7\63\2\2\u00a1(\3\2\2\2\u00a2\u00a3\7~\2\2\u00a3*\3\2\2\2\u00a4"+
		"\u00a5\7E\2\2\u00a5\u00a6\7~\2\2\u00a6,\3\2\2\2\u00a7\u00a8\7i\2\2\u00a8"+
		".\3\2\2\2\u00a9\u00aa\7d\2\2\u00aa\60\3\2\2\2\u00ab\u00ac\7_\2\2\u00ac"+
		"\62\3\2\2\2\u00ad\u00ae\7E\2\2\u00ae\64\3\2\2\2\u00af\u00b0\7E\2\2\u00b0"+
		"\u00b1\7<\2\2\u00b1\66\3\2\2\2\u00b2\u00b3\7.\2\2\u00b38\3\2\2\2\u00b4"+
		"\u00b5\7/\2\2\u00b5:\3\2\2\2\u00b6\u00b7\7*\2\2\u00b7<\3\2\2\2\u00b8\u00b9"+
		"\7h\2\2\u00b9>\3\2\2\2\u00ba\u00bb\7)\2\2\u00bb@\3\2\2\2\u00bc\u00bd\7"+
		"~\2\2\u00bd\u00be\7_\2\2\u00beB\3\2\2\2\u00bf\u00c0\7\"\2\2\u00c0D\3\2"+
		"\2\2\u00c1\u00c2\7I\2\2\u00c2F\3\2\2\2\u00c3\u00c4\7]\2\2\u00c4\u00c5"+
		"\7\64\2\2\u00c5H\3\2\2\2\u00c6\u00c7\7~\2\2\u00c7\u00c8\7<\2\2\u00c8J"+
		"\3\2\2\2\u00c9\u00ca\7`\2\2\u00caL\3\2\2\2\u00cb\u00cc\7c\2\2\u00ccN\3"+
		"\2\2\2\u00cd\u00ce\7N\2\2\u00ce\u00cf\7<\2\2\u00cfP\3\2\2\2\u00d0\u00d1"+
		"\7a\2\2\u00d1\u00d2\7a\2\2\u00d2R\3\2\2\2\u00d3\u00d4\7D\2\2\u00d4T\3"+
		"\2\2\2\u00d5\u00d6\7<\2\2\u00d6\u00d7\7~\2\2\u00d7V\3\2\2\2\u00d8\u00d9"+
		"\7X\2\2\u00d9\u00da\7<\2\2\u00daX\3\2\2\2\u00db\u00dc\7g\2\2\u00dcZ\3"+
		"\2\2\2\u00dd\u00de\7~\2\2\u00de\u00df\7~\2\2\u00df\\\3\2\2\2\u00e0\u00e1"+
		"\7o\2\2\u00e1^\3\2\2\2\u00e2\u00e3\7|\2\2\u00e3`\3\2\2\2\u00e4\u00e5\7"+
		"M\2\2\u00e5\u00e6\7<\2\2\u00e6b\3\2\2\2\u00e7\u00e8\7H\2\2\u00e8d\3\2"+
		"\2\2\u00e9\u00ea\7\61\2\2\u00eaf\3\2\2\2\u00eb\u00ec\7\u0080\2\2\u00ec"+
		"h\3\2\2\2\u00ed\u00ee\7%\2\2\u00eej\3\2\2\2\u00ef\u00f1\t\2\2\2\u00f0"+
		"\u00ef\3\2\2\2\u00f1\u00f2\3\2\2\2\u00f2\u00f0\3\2\2\2\u00f2\u00f3\3\2"+
		"\2\2\u00f3l\3\2\2\2\u00f4\u00f6\t\3\2\2\u00f5\u00f4\3\2\2\2\u00f6\u00f7"+
		"\3\2\2\2\u00f7\u00f5\3\2\2\2\u00f7\u00f8\3\2\2\2\u00f8n\3\2\2\2\u00f9"+
		"\u00fb\t\4\2\2\u00fa\u00f9\3\2\2\2\u00fb\u00fc\3\2\2\2\u00fc\u00fa\3\2"+
		"\2\2\u00fc\u00fd\3\2\2\2\u00fdp\3\2\2\2\u00fe\u0100\7\f\2\2\u00ff\u00fe"+
		"\3\2\2\2\u0100\u0101\3\2\2\2\u0101\u00ff\3\2\2\2\u0101\u0102\3\2\2\2\u0102"+
		"r\3\2\2\2\7\2\u00f2\u00f7\u00fc\u0101";
	public static final ATN _ATN =
		ATNSimulator.deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
	}
}